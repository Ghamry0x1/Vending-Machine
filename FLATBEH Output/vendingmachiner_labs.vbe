-- VHDL data flow description generated from `vendingmachiner_labs`
--		date : Tue Apr 24 18:58:10 2018


-- Entity Declaration

ENTITY vendingmachiner_labs IS
  PORT (
  change : out bit_vector(1 DOWNTO 0) ;	-- change
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  rst : in BIT;	-- rst
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  clk : in BIT;	-- clk
  vss : in BIT;	-- vss
  vdd : in BIT	-- vdd
  );
END vendingmachiner_labs;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachiner_labs IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL not_aux8 : BIT;		-- not_aux8
  SIGNAL not_aux24 : BIT;		-- not_aux24
  SIGNAL not_aux19 : BIT;		-- not_aux19
  SIGNAL not_aux3 : BIT;		-- not_aux3
  SIGNAL not_aux1 : BIT;		-- not_aux1
  SIGNAL not_aux0 : BIT;		-- not_aux0
  SIGNAL not_aux17 : BIT;		-- not_aux17
  SIGNAL not_aux5 : BIT;		-- not_aux5
  SIGNAL not_aux7 : BIT;		-- not_aux7
  SIGNAL not_aux4 : BIT;		-- not_aux4
  SIGNAL not_aux16 : BIT;		-- not_aux16
  SIGNAL not_aux2 : BIT;		-- not_aux2
  SIGNAL not_aux9 : BIT;		-- not_aux9
  SIGNAL not_aux10 : BIT;		-- not_aux10
  SIGNAL not_aux13 : BIT;		-- not_aux13
  SIGNAL not_aux15 : BIT;		-- not_aux15
  SIGNAL not_statmachine_current_s : BIT_VECTOR(3 DOWNTO 0);	-- not_statmachine_current_s
  SIGNAL not_aux12 : BIT;		-- not_aux12
  SIGNAL not_aux11 : BIT;		-- not_aux11
  SIGNAL not_input : BIT_VECTOR(2 DOWNTO 0);	-- not_input
  SIGNAL not_rst : BIT;		-- not_rst
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux20 : BIT;		-- aux20
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL na3_x1_2_sig : BIT;		-- na3_x1_2_sig
  SIGNAL na2_x1_sig : BIT;		-- na2_x1_sig
  SIGNAL no2_x1_sig : BIT;		-- no2_x1_sig
  SIGNAL na3_x1_3_sig : BIT;		-- na3_x1_3_sig
  SIGNAL na3_x1_sig : BIT;		-- na3_x1_sig
  SIGNAL a2_x2_sig : BIT;		-- a2_x2_sig
  SIGNAL oa22_x2_sig : BIT;		-- oa22_x2_sig
  SIGNAL na2_x1_2_sig : BIT;		-- na2_x1_2_sig
  SIGNAL no2_x1_2_sig : BIT;		-- no2_x1_2_sig
  SIGNAL inv_x2_sig : BIT;		-- inv_x2_sig
  SIGNAL noa2a2a23_x1_sig : BIT;		-- noa2a2a23_x1_sig
  SIGNAL an12_x1_sig : BIT;		-- an12_x1_sig
  SIGNAL a2_x2_3_sig : BIT;		-- a2_x2_3_sig
  SIGNAL na3_x1_4_sig : BIT;		-- na3_x1_4_sig
  SIGNAL a2_x2_2_sig : BIT;		-- a2_x2_2_sig
  SIGNAL na3_x1_5_sig : BIT;		-- na3_x1_5_sig
  SIGNAL oa2ao222_x2_sig : BIT;		-- oa2ao222_x2_sig
  SIGNAL no2_x1_3_sig : BIT;		-- no2_x1_3_sig
  SIGNAL an12_x1_2_sig : BIT;		-- an12_x1_2_sig
  SIGNAL no3_x1_sig : BIT;		-- no3_x1_sig
  SIGNAL inv_x2_2_sig : BIT;		-- inv_x2_2_sig
  SIGNAL oa22_x2_2_sig : BIT;		-- oa22_x2_2_sig
  SIGNAL nao22_x1_sig : BIT;		-- nao22_x1_sig
  SIGNAL na3_x1_7_sig : BIT;		-- na3_x1_7_sig
  SIGNAL inv_x2_3_sig : BIT;		-- inv_x2_3_sig
  SIGNAL oa22_x2_3_sig : BIT;		-- oa22_x2_3_sig
  SIGNAL na3_x1_6_sig : BIT;		-- na3_x1_6_sig
  SIGNAL a2_x2_4_sig : BIT;		-- a2_x2_4_sig
  SIGNAL inv_x2_4_sig : BIT;		-- inv_x2_4_sig
  SIGNAL nao22_x1_2_sig : BIT;		-- nao22_x1_2_sig
  SIGNAL nao22_x1_3_sig : BIT;		-- nao22_x1_3_sig
  SIGNAL a2_x2_5_sig : BIT;		-- a2_x2_5_sig
  SIGNAL na3_x1_8_sig : BIT;		-- na3_x1_8_sig
  SIGNAL a2_x2_6_sig : BIT;		-- a2_x2_6_sig
  SIGNAL no2_x1_4_sig : BIT;		-- no2_x1_4_sig
  SIGNAL a2_x2_7_sig : BIT;		-- a2_x2_7_sig
  SIGNAL ao22_x2_sig : BIT;		-- ao22_x2_sig
  SIGNAL a2_x2_8_sig : BIT;		-- a2_x2_8_sig
  SIGNAL a2_x2_9_sig : BIT;		-- a2_x2_9_sig
  SIGNAL ao22_x2_2_sig : BIT;		-- ao22_x2_2_sig
  SIGNAL o3_x2_sig : BIT;		-- o3_x2_sig
  SIGNAL noa22_x1_sig : BIT;		-- noa22_x1_sig
  SIGNAL na2_x1_3_sig : BIT;		-- na2_x1_3_sig
  SIGNAL oa3ao322_x2_sig : BIT;		-- oa3ao322_x2_sig
  SIGNAL on12_x1_sig : BIT;		-- on12_x1_sig
  SIGNAL an12_x1_3_sig : BIT;		-- an12_x1_3_sig
  SIGNAL no2_x1_5_sig : BIT;		-- no2_x1_5_sig
  SIGNAL nao22_x1_4_sig : BIT;		-- nao22_x1_4_sig
  SIGNAL o2_x2_sig : BIT;		-- o2_x2_sig
  SIGNAL on12_x1_2_sig : BIT;		-- on12_x1_2_sig
  SIGNAL na3_x1_11_sig : BIT;		-- na3_x1_11_sig
  SIGNAL na3_x1_10_sig : BIT;		-- na3_x1_10_sig
  SIGNAL na2_x1_4_sig : BIT;		-- na2_x1_4_sig
  SIGNAL no2_x1_6_sig : BIT;		-- no2_x1_6_sig
  SIGNAL noa22_x1_2_sig : BIT;		-- noa22_x1_2_sig
  SIGNAL no2_x1_7_sig : BIT;		-- no2_x1_7_sig
  SIGNAL ao22_x2_3_sig : BIT;		-- ao22_x2_3_sig
  SIGNAL na3_x1_9_sig : BIT;		-- na3_x1_9_sig
  SIGNAL on12_x1_3_sig : BIT;		-- on12_x1_3_sig
  SIGNAL na4_x1_sig : BIT;		-- na4_x1_sig
  SIGNAL on12_x1_4_sig : BIT;		-- on12_x1_4_sig
  SIGNAL on12_x1_5_sig : BIT;		-- on12_x1_5_sig
  SIGNAL oa22_x2_4_sig : BIT;		-- oa22_x2_4_sig
  SIGNAL na4_x1_2_sig : BIT;		-- na4_x1_2_sig
  SIGNAL mbk_buf_not_statmachine_current_s : BIT_VECTOR(3 DOWNTO 3);	-- mbk_buf_not_statmachine_current_s
  SIGNAL mbk_buf_aux3 : BIT;		-- mbk_buf_aux3

BEGIN
  mbk_buf_aux3 <= aux3;
  mbk_buf_not_statmachine_current_s (3) <= not_statmachine_current_s(3);
  na4_x1_2_sig <= NOT((((input(2) AND not_rst) AND not_input(1)) 
AND not_input(0)));
  oa22_x2_4_sig <= ((mbk_buf_aux3 AND not_aux1) OR on12_x1_5_sig);
  on12_x1_5_sig <= (NOT(aux20) OR input(0));
  on12_x1_4_sig <= (NOT(aux22) OR not_aux1);
  na4_x1_sig <= NOT((((on12_x1_3_sig AND not_rst) AND not_aux5) 
AND mbk_buf_not_statmachine_current_s(3)));
  on12_x1_3_sig <= (NOT(aux25) OR not_aux19);
  na3_x1_9_sig <= NOT(((ao22_x2_3_sig AND na2_x1_4_sig) AND 
nao22_x1_4_sig));
  ao22_x2_3_sig <= ((no2_x1_7_sig OR 
mbk_buf_not_statmachine_current_s(3)) AND noa22_x1_2_sig);
  no2_x1_7_sig <= NOT((statmachine_current_s(2) OR 
statmachine_current_s(0)));
  noa22_x1_2_sig <= NOT(((not_statmachine_current_s(0) AND 
no2_x1_6_sig) OR rst));
  no2_x1_6_sig <= NOT((not_aux17 OR not_input(0)));
  na2_x1_4_sig <= NOT((not_input(1) AND na3_x1_10_sig));
  na3_x1_10_sig <= NOT(((aux18 AND na3_x1_11_sig) AND on12_x1_2_sig)
);
  na3_x1_11_sig <= NOT(((input(0) AND statmachine_current_s(1)) AND 
statmachine_current_s(0)));
  on12_x1_2_sig <= (NOT(not_statmachine_current_s(0)) OR o2_x2_sig);
  o2_x2_sig <= (input(0) OR not_aux10);
  nao22_x1_4_sig <= NOT(((no2_x1_5_sig OR an12_x1_3_sig) AND input(1)
));
  no2_x1_5_sig <= NOT((not_aux19 OR not_input(0)));
  an12_x1_3_sig <= (NOT(on12_x1_sig) AND statmachine_current_s(1));
  on12_x1_sig <= (NOT(aux18) OR input(0));
  oa3ao322_x2_sig <= (((statmachine_current_s(2) AND na2_x1_3_sig) AND
 aux26) OR (not_input(2) AND ((ao22_x2_sig OR 
ao22_x2_2_sig) OR noa22_x1_sig)));
  na2_x1_3_sig <= NOT((not_aux9 AND aux25));
  noa22_x1_sig <= NOT(((not_statmachine_current_s(2) AND not_aux13)
 OR o3_x2_sig));
  o3_x2_sig <= ((rst OR input(0)) OR not_aux3);
  ao22_x2_2_sig <= ((a2_x2_9_sig OR a2_x2_8_sig) AND aux22);
  a2_x2_9_sig <= (not_aux0 AND not_statmachine_current_s(0));
  a2_x2_8_sig <= (statmachine_current_s(3) AND 
statmachine_current_s(0));
  ao22_x2_sig <= ((a2_x2_6_sig OR a2_x2_7_sig) AND aux20);
  a2_x2_7_sig <= (no2_x1_4_sig AND statmachine_current_s(0));
  no2_x1_4_sig <= NOT((input(0) OR not_aux15));
  a2_x2_6_sig <= (input(0) AND not_aux3);
  na3_x1_8_sig <= NOT(((a2_x2_5_sig AND nao22_x1_3_sig) AND 
nao22_x1_2_sig));
  a2_x2_5_sig <= (not_rst AND not_aux5);
  nao22_x1_3_sig <= NOT(((not_aux7 OR aux27) AND 
statmachine_current_s(0)));
  nao22_x1_2_sig <= NOT(((inv_x2_4_sig OR a2_x2_4_sig) AND aux25));
  inv_x2_4_sig <= NOT(not_aux16);
  a2_x2_4_sig <= (not_aux4 AND not_statmachine_current_s(0));
  na3_x1_6_sig <= NOT(((oa22_x2_3_sig AND na3_x1_7_sig) AND 
no3_x1_sig));
  oa22_x2_3_sig <= ((mbk_buf_aux3 AND not_aux5) OR inv_x2_3_sig);
  inv_x2_3_sig <= NOT(aux25);
  na3_x1_7_sig <= NOT(((input(1) AND nao22_x1_sig) AND 
oa22_x2_2_sig));
  nao22_x1_sig <= NOT(((not_aux4 OR not_statmachine_current_s(0)) 
AND not_input(0)));
  oa22_x2_2_sig <= ((not_statmachine_current_s(0) AND not_aux1) OR 
inv_x2_2_sig);
  inv_x2_2_sig <= NOT(not_aux16);
  no3_x1_sig <= NOT(((rst OR an12_x1_2_sig) OR no2_x1_3_sig));
  an12_x1_2_sig <= (NOT(not_statmachine_current_s(2)) AND aux27);
  no2_x1_3_sig <= NOT((not_aux17 OR not_input(0)));
  oa2ao222_x2_sig <= ((na3_x1_5_sig AND a2_x2_2_sig) OR (not_input(2) 
AND (an12_x1_sig OR a2_x2_sig)));
  na3_x1_5_sig <= NOT(((statmachine_current_s(2) AND 
statmachine_current_s(3)) AND not_statmachine_current_s(1)));
  a2_x2_2_sig <= (na3_x1_4_sig AND a2_x2_3_sig);
  na3_x1_4_sig <= NOT(((not_aux15 AND not_aux12) AND aux25));
  a2_x2_3_sig <= (aux26 AND aux14);
  an12_x1_sig <= (NOT(noa2a2a23_x1_sig) AND aux21);
  noa2a2a23_x1_sig <= NOT((((inv_x2_sig AND not_input(0)) OR (
no2_x1_2_sig AND na2_x1_2_sig)) OR (oa22_x2_sig AND not_aux12
)));
  inv_x2_sig <= NOT(not_aux9);
  no2_x1_2_sig <= NOT((not_input(0) OR statmachine_current_s(2)));
  na2_x1_2_sig <= NOT((not_aux10 AND statmachine_current_s(0)));
  oa22_x2_sig <= ((not_statmachine_current_s(2) AND 
mbk_buf_not_statmachine_current_s(3)) OR statmachine_current_s(1));
  a2_x2_sig <= (na3_x1_sig AND aux20);
  na3_x1_sig <= NOT(((na3_x1_3_sig AND not_aux12) AND 
na3_x1_2_sig));
  na3_x1_3_sig <= NOT(((mbk_buf_not_statmachine_current_s(3) AND 
no2_x1_sig) AND na2_x1_sig));
  no2_x1_sig <= NOT((not_input(0) OR not_statmachine_current_s(1)
));
  na2_x1_sig <= NOT((statmachine_current_s(2) AND 
not_statmachine_current_s(0)));
  na3_x1_2_sig <= NOT(((not_input(0) AND not_aux13) AND aux14));
  aux3 <= NOT((statmachine_current_s(0) AND not_aux2));
  aux5 <= NOT((statmachine_current_s(0) OR 
not_statmachine_current_s(1)));
  aux14 <= NOT((not_aux11 AND not_statmachine_current_s(0)));
  aux18 <= NOT((statmachine_current_s(2) AND 
statmachine_current_s(0)));
  aux20 <= NOT((rst OR not_input(1)));
  aux21 <= NOT((rst OR input(1)));
  aux22 <= (NOT(not_input(0)) AND aux21);
  aux25 <= NOT((input(1) OR input(0)));
  aux26 <= NOT((rst OR not_input(2)));
  aux27 <= NOT((not_statmachine_current_s(1) OR 
mbk_buf_not_statmachine_current_s(3)));
  not_rst <= NOT(rst);
  not_input (0) <= NOT(input(0));
  not_input (1) <= NOT(input(1));
  not_input (2) <= NOT(input(2));
  not_aux11 <= (statmachine_current_s(3) XOR 
statmachine_current_s(2));
  not_aux12 <= NOT((not_aux11 AND statmachine_current_s(0)));
  not_statmachine_current_s (0) <= NOT(statmachine_current_s(0));
  not_statmachine_current_s (1) <= NOT(statmachine_current_s(1));
  not_statmachine_current_s (2) <= NOT(statmachine_current_s(2));
  not_statmachine_current_s (3) <= NOT(statmachine_current_s(3));
  not_aux15 <= (statmachine_current_s(2) OR 
not_statmachine_current_s(1));
  not_aux13 <= NOT((statmachine_current_s(3) XOR 
statmachine_current_s(1)));
  not_aux10 <= (statmachine_current_s(1) OR 
mbk_buf_not_statmachine_current_s(3));
  not_aux9 <= (statmachine_current_s(3) OR 
not_statmachine_current_s(0));
  not_aux2 <= (statmachine_current_s(2) AND 
not_statmachine_current_s(3));
  not_aux16 <= (not_aux2 OR not_statmachine_current_s(0));
  not_aux4 <= (statmachine_current_s(2) OR 
mbk_buf_not_statmachine_current_s(3));
  not_aux7 <= NOT(((mbk_buf_not_statmachine_current_s(3) AND 
not_statmachine_current_s(1)) OR statmachine_current_s(2)));
  not_aux5 <= NOT(aux5);
  not_aux17 <= (not_aux15 OR statmachine_current_s(3));
  not_aux0 <= (statmachine_current_s(1) OR 
statmachine_current_s(2));
  not_aux1 <= (not_aux0 OR mbk_buf_not_statmachine_current_s(3)
);
  not_aux3 <= NOT(aux3);
  not_aux19 <= (not_aux0 AND statmachine_current_s(0));
  not_aux24 <= ((rst OR input(2)) OR not_input(1));
  not_aux8 <= (not_aux7 OR not_aux3);
  label0 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED oa2ao222_x2_sig;
  END BLOCK label0;
  label1 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED ((na3_x1_6_sig AND not_input(2)) OR (na3_x1_8_sig
 AND NOT(not_input(2))));
  END BLOCK label1;
  label2 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED oa3ao322_x2_sig;
  END BLOCK label2;
  label3 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED ((na3_x1_9_sig AND not_input(2)) OR (na4_x1_sig 
AND NOT(not_input(2))));
  END BLOCK label3;

change (0) <= NOT(((oa22_x2_4_sig AND on12_x1_4_sig) OR 
input(2)));

change (1) <= NOT((((not_aux24 OR input(0)) OR aux5) OR 
not_aux4));

output (0) <= NOT(((not_input(0) OR not_aux8) OR not_aux24));

output (1) <= NOT((not_aux8 OR na4_x1_2_sig));
END;

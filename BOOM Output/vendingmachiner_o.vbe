-- VHDL data flow description generated from `vendingMachiner_o`
--		date : Sat Apr 21 06:08:28 2018


-- Entity Declaration

ENTITY vendingmachiner_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachiner_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachiner_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux20 : BIT;		-- aux20
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux24 : BIT;		-- aux24
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux27 : BIT;		-- aux27

BEGIN
  aux27 <= (statmachine_current_s(3) AND 
statmachine_current_s(1));
  aux26 <= (NOT(rst) AND input(2));
  aux25 <= NOT(input(0) OR input(1));
  aux24 <= (NOT(rst) AND (input(1) AND NOT(input(2))));
  aux22 <= (input(0) AND aux21);
  aux21 <= (NOT(rst) AND NOT(input(1)));
  aux20 <= (NOT(rst) AND input(1));
  aux19 <= (aux0 OR NOT(statmachine_current_s(0)));
  aux18 <= NOT(statmachine_current_s(2) AND 
statmachine_current_s(0));
  aux17 <= (aux15 AND NOT(statmachine_current_s(3)));
  aux16 <= (aux2 AND statmachine_current_s(0));
  aux15 <= (NOT(statmachine_current_s(2)) AND 
statmachine_current_s(1));
  aux14 <= (aux11 OR statmachine_current_s(0));
  aux13 <= (statmachine_current_s(1) XOR 
statmachine_current_s(3));
  aux12 <= NOT(aux11 OR NOT(statmachine_current_s(0)));
  aux11 <= NOT(statmachine_current_s(2) XOR 
statmachine_current_s(3));
  aux10 <= (NOT(statmachine_current_s(1)) AND 
statmachine_current_s(3));
  aux9 <= (NOT(statmachine_current_s(3)) AND 
statmachine_current_s(0));
  aux8 <= (aux3 AND aux7);
  aux7 <= (statmachine_current_s(2) OR (NOT(
statmachine_current_s(1)) AND NOT(statmachine_current_s(3))));
  aux5 <= NOT(NOT(statmachine_current_s(1)) OR 
statmachine_current_s(0));
  aux4 <= (NOT(statmachine_current_s(2)) AND 
statmachine_current_s(3));
  aux3 <= NOT(NOT(aux2) AND statmachine_current_s(0));
  aux2 <= NOT(statmachine_current_s(2) AND NOT(
statmachine_current_s(3)));
  aux1 <= (aux0 AND statmachine_current_s(3));
  aux0 <= (NOT(statmachine_current_s(2)) AND NOT(
statmachine_current_s(1)));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED (((aux12 OR aux15 OR NOT(aux25)) AND aux14 AND (
NOT(statmachine_current_s(2)) OR 
statmachine_current_s(1) OR NOT(statmachine_current_s(3))) AND aux26) OR 
((((aux12 OR ((NOT(statmachine_current_s(2)) OR 
statmachine_current_s(0)) AND statmachine_current_s(1) AND NOT(
statmachine_current_s(3)) AND input(0)) OR (aux14 AND NOT(aux13) AND NOT(
input(0)))) AND aux20) OR (((NOT(aux12) AND ((NOT(
statmachine_current_s(2)) AND NOT(statmachine_current_s(3))) OR 
statmachine_current_s(1))) OR ((aux10 OR NOT(statmachine_current_s(0))) 
AND NOT(statmachine_current_s(2)) AND input(0)) OR (
aux9 AND NOT(input(0)))) AND aux21)) AND NOT(input(2)
)));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED (((((aux16 OR (NOT(aux4) AND NOT(
statmachine_current_s(0)))) AND aux25) OR ((NOT(aux7) OR aux27) AND 
statmachine_current_s(0)) OR aux5 OR rst) AND input(2)) OR (((aux17 AND 
input(0)) OR (statmachine_current_s(2) AND aux27) OR rst 
OR (((aux4 AND statmachine_current_s(0)) OR 
input(0)) AND (aux16 OR (NOT(aux1) AND NOT(
statmachine_current_s(0)))) AND input(1)) OR ((NOT(aux3) OR aux5) AND 
aux25)) AND NOT(input(2))));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((aux9 OR NOT(aux25)) AND 
statmachine_current_s(2) AND aux26) OR (((aux3 AND (
statmachine_current_s(2) OR aux13) AND NOT(input(0)) AND NOT(rst)) OR (((
NOT(aux3) AND input(0)) OR (aux15 AND 
statmachine_current_s(0) AND NOT(input(0)))) AND aux20) OR (((
statmachine_current_s(3) AND statmachine_current_s(0)) OR (NOT(aux0) AND 
NOT(statmachine_current_s(0)))) AND aux22)) AND NOT(
input(2))));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED ((((aux19 AND aux25) OR aux5 OR 
statmachine_current_s(3) OR rst) AND input(2)) OR (((aux17 AND NOT(
statmachine_current_s(0)) AND input(0)) OR ((statmachine_current_s(2) OR 
statmachine_current_s(0)) AND statmachine_current_s(3)) OR rst OR (((
aux19 AND input(0)) OR (aux18 AND 
statmachine_current_s(1) AND NOT(input(0)))) AND input(1)) OR ((NOT(aux18
) OR (statmachine_current_s(1) AND 
statmachine_current_s(0) AND input(0)) OR (aux10 AND NOT(
statmachine_current_s(0)) AND NOT(input(0)))) AND NOT(input(1)))) AND NOT
(input(2))));
  END BLOCK label3;

change (0) <= ((((NOT(aux3) OR aux1) AND NOT(input(0)) AND 
aux20) OR (aux1 AND aux22)) AND NOT(input(2)));

change (1) <= (NOT(aux5) AND aux4 AND NOT(input(0)) AND aux24);

output (0) <= (aux8 AND input(0) AND aux24);

output (1) <= (aux8 AND NOT(input(0)) AND NOT(rst) AND NOT(
input(1)) AND input(2));
END;

-- VHDL data flow description generated from `vendingMachinem_o`
--		date : Sat Apr 21 06:08:15 2018


-- Entity Declaration

ENTITY vendingmachinem_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachinem_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachinem_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux24 : BIT;		-- aux24
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux28 : BIT;		-- aux28
  SIGNAL aux29 : BIT;		-- aux29
  SIGNAL aux30 : BIT;		-- aux30

BEGIN
  aux30 <= ((aux9 AND NOT(statmachine_current_s(1))) OR 
statmachine_current_s(3));
  aux29 <= (statmachine_current_s(0) AND 
statmachine_current_s(1));
  aux28 <= (NOT(statmachine_current_s(1)) AND NOT(
statmachine_current_s(3)));
  aux27 <= NOT(NOT(input(1)) AND statmachine_current_s(1));
  aux26 <= (NOT(statmachine_current_s(1)) AND 
statmachine_current_s(3));
  aux25 <= (NOT(rst) AND NOT(input(0)));
  aux24 <= (input(1) AND statmachine_current_s(3));
  aux23 <= (NOT(rst) AND input(0));
  aux21 <= ((aux16 AND statmachine_current_s(0)) AND 
statmachine_current_s(1));
  aux19 <= (statmachine_current_s(2) AND 
statmachine_current_s(0));
  aux18 <= (aux3 AND statmachine_current_s(0));
  aux17 <= (NOT(input(2)) AND NOT(statmachine_current_s(0)));
  aux16 <= (input(2) OR input(1));
  aux15 <= (NOT(statmachine_current_s(2)) AND aux13);
  aux14 <= (statmachine_current_s(2) AND NOT(
statmachine_current_s(1)));
  aux13 <= (input(2) OR NOT(input(1)));
  aux12 <= (input(2) AND statmachine_current_s(0));
  aux11 <= NOT(NOT(statmachine_current_s(0)) OR NOT(input(1)
));
  aux10 <= (NOT(statmachine_current_s(2)) AND input(2));
  aux9 <= (aux8 AND NOT(statmachine_current_s(0)));
  aux8 <= (NOT(statmachine_current_s(2)) AND NOT(input(2)));
  aux7 <= NOT(aux6 AND NOT(input(2)));
  aux6 <= (statmachine_current_s(2) OR 
statmachine_current_s(0));
  aux5 <= NOT(NOT(aux3) AND input(1));
  aux4 <= (aux0 AND NOT(input(1)));
  aux3 <= NOT(statmachine_current_s(2) AND NOT(input(2)));
  aux2 <= ((aux0 AND input(1)) AND statmachine_current_s(1)
);
  aux0 <= (NOT(input(2)) AND statmachine_current_s(0));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED ((((aux16 AND statmachine_current_s(1)) OR aux15 
OR statmachine_current_s(3)) AND (aux14 OR aux11 OR
 ((NOT(aux3) XOR statmachine_current_s(0)) AND NOT
(input(1)))) AND aux23) OR (((((NOT(
statmachine_current_s(2)) AND input(1)) OR statmachine_current_s(1)) AND 
aux5 AND statmachine_current_s(0)) OR ((NOT(aux3) OR 
NOT(statmachine_current_s(1))) AND aux13 AND (
statmachine_current_s(2) OR aux12) AND statmachine_current_s(3)) OR (aux8
 AND NOT(aux11) AND aux28)) AND aux25));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED (((aux29 OR (statmachine_current_s(2) AND (NOT(
statmachine_current_s(0)) OR statmachine_current_s(1)) AND 
statmachine_current_s(3)) OR ((aux9 OR statmachine_current_s(1)) AND 
aux15 AND NOT(statmachine_current_s(3)))) AND aux23) 
OR (((aux13 AND aux18 AND statmachine_current_s(1))
 OR (((statmachine_current_s(2) AND input(2)) OR 
aux27) AND (aux4 OR (statmachine_current_s(2) AND NOT(
statmachine_current_s(0)))) AND statmachine_current_s(3)) OR (((aux17 AND
 input(1)) OR statmachine_current_s(1)) AND (aux17
 OR input(1)) AND NOT(statmachine_current_s(2)) 
AND NOT(statmachine_current_s(3)))) AND aux25));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((((((NOT(statmachine_current_s(2)) OR input(1))
 AND aux29) OR (aux13 AND (
statmachine_current_s(2) XOR aux0))) AND statmachine_current_s(3)) OR ((
aux21 OR (statmachine_current_s(2) AND NOT(input(2) 
XOR input(1)) AND NOT(statmachine_current_s(1)))) 
AND NOT(statmachine_current_s(3)))) AND NOT(rst)) OR
 (((statmachine_current_s(2) AND aux24) OR ((
statmachine_current_s(2) OR aux17) AND NOT(input(1)) AND aux28)) AND 
aux23) OR (((aux19 AND NOT(input(1)) AND aux26) OR ((
aux19 OR aux17) AND input(1) AND aux28)) AND aux25));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED (((aux21 OR aux30) AND ((NOT(aux9) AND input(1)) 
OR ((aux3 OR NOT(statmachine_current_s(0))) AND NOT
(input(1)))) AND aux23) OR (((aux12 AND 
statmachine_current_s(1)) OR aux30) AND (aux14 OR (aux7 AND input(1)) OR 
((aux18 OR (NOT(aux10) AND NOT(
statmachine_current_s(0)))) AND NOT(input(1)))) AND aux25));
  END BLOCK label3;

change (0) <= ((aux4 AND statmachine_current_s(1) AND aux23) OR
 (((NOT(aux3) AND NOT(statmachine_current_s(0)) 
AND aux24) OR aux2) AND aux25));

change (1) <= (((NOT(aux5) AND aux26) OR aux2) AND aux25);

output (0) <= (((aux9 AND aux24) OR (((aux8 AND input(1) AND 
statmachine_current_s(1)) OR (NOT(aux7) AND input(1) AND NOT(
statmachine_current_s(1)))) AND NOT(statmachine_current_s(3)))) AND aux23
);

output (1) <= (((aux10 AND NOT(statmachine_current_s(0)) AND 
NOT(input(1)) AND statmachine_current_s(3)) OR (((
aux10 AND NOT(aux27)) OR (aux6 AND input(2) AND NOT(
input(1)) AND NOT(statmachine_current_s(1)))) AND NOT(
statmachine_current_s(3)))) AND aux25);
END;

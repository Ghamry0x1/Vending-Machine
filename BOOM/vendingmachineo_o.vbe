-- VHDL data flow description generated from `vendingmachineo_o`
--		date : Thu May 10 09:16:02 2018


-- Entity Declaration

ENTITY vendingmachineo_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachineo_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachineo_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(8 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10

BEGIN
  aux10 <= NOT(aux9 OR (aux5 AND aux8));
  aux9 <= (NOT(aux0) AND aux7);
  aux8 <= (NOT(rst) AND NOT(input(0)));
  aux7 <= (NOT(rst) AND input(0));
  aux6 <= (statmachine_current_s(2) OR NOT(input(2)));
  aux5 <= NOT(NOT(input(1)) AND input(2));
  aux4 <= (((statmachine_current_s(0) OR 
statmachine_current_s(2)) OR statmachine_current_s(3)) OR 
statmachine_current_s(1));
  aux1 <= (NOT(input(1)) AND NOT(input(2)));
  aux0 <= (input(1) AND NOT(input(2)));
  label0 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED ((NOT(aux0) AND statmachine_current_s(0) AND aux7
) OR (((aux0 AND statmachine_current_s(4)) OR (
aux5 AND statmachine_current_s(0))) AND aux8));
  END BLOCK label0;
  label1 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED (((input(1) AND statmachine_current_s(5) AND NOT(
input(2)) AND NOT(rst)) OR statmachine_current_s(1)) AND 
NOT(aux10));
  END BLOCK label1;
  label2 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((statmachine_current_s(2) OR 
statmachine_current_s(4)) AND aux6 AND aux9) OR ((
statmachine_current_s(2) OR statmachine_current_s(6)) AND ((input(1) AND 
aux6) OR (statmachine_current_s(2) AND NOT(input(2)))
) AND aux8));
  END BLOCK label2;
  label3 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED ((((statmachine_current_s(5) AND NOT(input(2))) 
OR statmachine_current_s(3)) AND aux9) OR ((
input(1) OR statmachine_current_s(3) OR 
statmachine_current_s(4)) AND ((input(1) AND statmachine_current_s(3)) OR
 ((NOT(input(1)) OR statmachine_current_s(7)) AND 
NOT(input(2)))) AND aux8));
  END BLOCK label3;
  label4 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (4) <= GUARDED (((aux1 OR statmachine_current_s(4)) AND (NOT(
aux1) OR statmachine_current_s(6)) AND aux7) OR ((NOT
(input(2)) OR statmachine_current_s(4)) AND (((NOT
(input(1)) OR statmachine_current_s(8)) AND (
input(1) OR statmachine_current_s(5))) OR input(2)) AND 
aux8));
  END BLOCK label4;
  label5 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (5) <= GUARDED ((statmachine_current_s(5) AND input(2) AND NOT(
rst)) OR ((NOT(input(1)) OR statmachine_current_s(5)
) AND (input(1) OR statmachine_current_s(7)) AND 
NOT(input(2)) AND aux7) OR (aux1 AND 
statmachine_current_s(6) AND aux8));
  END BLOCK label5;
  label6 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (6) <= GUARDED (((aux1 OR statmachine_current_s(6)) AND (
input(1) OR statmachine_current_s(8) OR input(2)) AND 
aux7) OR ((NOT(input(2)) OR statmachine_current_s(6))
 AND ((NOT(input(1)) AND statmachine_current_s(7))
 OR input(2)) AND aux8));
  END BLOCK label6;
  label7 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (7) <= GUARDED ((NOT(aux1) AND statmachine_current_s(7) AND aux7
) OR (((statmachine_current_s(7) AND input(2)) OR 
(NOT(input(1)) AND statmachine_current_s(8) AND 
NOT(input(2)))) AND aux8));
  END BLOCK label7;
  label8 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (8) <= GUARDED (((input(2) AND input(0)) OR 
statmachine_current_s(0) OR statmachine_current_s(8) OR 
statmachine_current_s(2) OR statmachine_current_s(3) OR rst OR 
statmachine_current_s(1)) AND ((statmachine_current_s(8) AND input(2)) OR
 aux10));
  END BLOCK label8;

change (0) <= ((aux1 AND statmachine_current_s(4) AND aux7) OR 
(aux0 AND (statmachine_current_s(6) OR 
statmachine_current_s(4)) AND aux8));

change (1) <= ((statmachine_current_s(5) OR 
statmachine_current_s(4)) AND aux0 AND aux8);

output (0) <= (aux4 AND aux0 AND aux7);

output (1) <= (aux4 AND NOT(aux5) AND aux8);
END;

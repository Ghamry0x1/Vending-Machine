-- VHDL data flow description generated from `vendingmachinej_o`
--		date : Thu May 10 09:16:01 2018


-- Entity Declaration

ENTITY vendingmachinej_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachinej_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachinej_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux20 : BIT;		-- aux20

BEGIN
  aux20 <= ((aux6 OR statmachine_current_s(0)) AND (NOT(
statmachine_current_s(3)) OR NOT(statmachine_current_s(1))));
  aux19 <= (aux10 AND input(2));
  aux18 <= (NOT(input(2)) AND aux17);
  aux17 <= (NOT(rst) AND NOT(statmachine_current_s(2)));
  aux16 <= ((NOT(statmachine_current_s(1)) OR 
statmachine_current_s(0)) AND aux15);
  aux15 <= (NOT(rst) AND statmachine_current_s(2));
  aux14 <= (NOT(input(2)) AND aux13);
  aux13 <= (NOT(statmachine_current_s(1)) AND NOT(
statmachine_current_s(0)));
  aux12 <= (aux11 AND NOT(input(0)));
  aux11 <= (NOT(statmachine_current_s(3)) AND NOT(input(1)));
  aux10 <= NOT(NOT(input(1)) AND NOT(input(0)));
  aux9 <= (NOT(statmachine_current_s(3)) AND input(1));
  aux6 <= (statmachine_current_s(3) OR 
statmachine_current_s(1));
  aux4 <= (input(1) AND input(0));
  aux3 <= NOT(NOT(aux2) AND statmachine_current_s(1));
  aux2 <= NOT((input(1) AND NOT(input(0))) AND NOT(input(2)
));
  aux0 <= NOT(input(1) XOR input(0));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED ((((NOT(aux12) AND input(2)) OR (NOT(
statmachine_current_s(3) XOR aux4) AND NOT(input(2)))) AND 
statmachine_current_s(0) AND NOT(rst)) OR (aux9 AND NOT(input(0)) AND NOT
(input(2)) AND statmachine_current_s(1) AND NOT(
statmachine_current_s(0)) AND aux15) OR (aux12 AND NOT(input(2)) AND NOT(
statmachine_current_s(1)) AND NOT(statmachine_current_s(0)) AND aux17));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED ((((aux6 AND NOT(input(1)) AND input(0) AND NOT(
input(2)) AND statmachine_current_s(0)) OR ((aux11 OR 
input(2)) AND NOT(statmachine_current_s(3)) AND aux10 AND
 statmachine_current_s(1))) AND NOT(rst)) OR ((((
aux4 OR (statmachine_current_s(3) AND NOT(input(1)) 
AND NOT(input(0))) OR input(2)) AND 
statmachine_current_s(1)) OR (input(0) AND statmachine_current_s(1) AND 
statmachine_current_s(0)) OR (statmachine_current_s(3) AND NOT(aux4) AND 
aux14)) AND aux15) OR ((statmachine_current_s(1) OR 
NOT(statmachine_current_s(0))) AND (input(1) OR 
statmachine_current_s(1)) AND NOT(statmachine_current_s(3)) AND NOT(
input(0)) AND aux18));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((statmachine_current_s(3) AND 
statmachine_current_s(0)) OR (NOT(statmachine_current_s(3)) AND aux14) OR
 statmachine_current_s(2)) AND (NOT(aux6) OR aux2 
OR statmachine_current_s(0)) AND (aux19 OR 
statmachine_current_s(3) OR (aux0 AND statmachine_current_s(1)) OR (NOT(
aux4) AND NOT(input(2)) AND NOT(
statmachine_current_s(1)))) AND NOT(rst));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED ((((NOT(input(0)) AND NOT(
statmachine_current_s(1))) OR input(1) OR input(2) OR 
statmachine_current_s(0)) AND statmachine_current_s(3) AND (aux2 OR 
statmachine_current_s(1)) AND aux15) OR (((statmachine_current_s(3) AND 
aux3 AND statmachine_current_s(0)) OR (((
statmachine_current_s(3) AND aux19) OR (((statmachine_current_s(3) AND 
NOT(input(0))) OR NOT(input(1))) AND NOT(input(2))))
 AND aux13)) AND aux17));
  END BLOCK label3;

change (0) <= (((statmachine_current_s(3) AND input(1) AND NOT(
input(0)) AND aux14) OR (NOT(statmachine_current_s(3)) 
AND NOT(aux0) AND NOT(input(2)) AND 
statmachine_current_s(1))) AND aux15);

change (1) <= (NOT(aux3) AND aux15);

output (0) <= ((aux9 AND input(0) AND NOT(input(2)) AND aux16) 
OR (aux20 AND aux4 AND aux18));

output (1) <= ((aux12 AND input(2) AND aux16) OR (aux20 AND NOT
(aux10) AND input(2) AND aux17));
END;

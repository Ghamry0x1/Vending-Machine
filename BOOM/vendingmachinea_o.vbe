-- VHDL data flow description generated from `vendingmachinea_o`
--		date : Wed Apr 25 14:07:27 2018


-- Entity Declaration

ENTITY vendingmachinea_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachinea_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachinea_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17

BEGIN
  aux17 <= (NOT(rst) AND NOT(input(2)));
  aux16 <= (statmachine_current_s(3) AND (NOT(rst) AND 
input(2)));
  aux14 <= (NOT(rst) AND NOT(input(1)));
  aux13 <= (NOT(statmachine_current_s(3)) AND NOT(
statmachine_current_s(2)) AND NOT(input(0)) AND aux12);
  aux12 <= (NOT(rst) AND NOT(aux11));
  aux11 <= NOT(NOT(input(2)) AND NOT(
statmachine_current_s(0)));
  aux10 <= (NOT(input(0)) AND aux9);
  aux9 <= (NOT(rst) AND (NOT(input(2)) AND input(1)));
  aux7 <= NOT(NOT(statmachine_current_s(3)) OR 
statmachine_current_s(2));
  aux6 <= (statmachine_current_s(1) OR input(0));
  aux5 <= (statmachine_current_s(1) AND 
statmachine_current_s(2));
  aux3 <= (statmachine_current_s(1) XOR aux2);
  aux2 <= (statmachine_current_s(3) OR 
statmachine_current_s(2));
  aux1 <= NOT(statmachine_current_s(3) XOR 
statmachine_current_s(2));
  aux0 <= (statmachine_current_s(1) AND 
statmachine_current_s(3));
  label0 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED (((input(0) OR input(2)) AND NOT(rst) AND 
statmachine_current_s(0) AND input(1)) OR (((NOT(rst) AND input(2) AND 
statmachine_current_s(0)) OR (NOT(statmachine_current_s(1)) AND aux13)) 
AND NOT(input(1))));
  END BLOCK label0;
  label1 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED (((aux13 OR (((aux2 AND input(0)) OR (NOT(
statmachine_current_s(2)) AND NOT(input(0))) OR input(2)) AND 
statmachine_current_s(1) AND NOT(rst))) AND input(1)) OR (((
statmachine_current_s(1) AND aux1) OR (NOT(aux2) AND input(0)) OR (aux5 
AND NOT(input(0))) OR aux11) AND ((
statmachine_current_s(1) AND (aux2 OR input(0))) OR NOT(input(2))) AND 
aux14));
  END BLOCK label1;
  label2 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((statmachine_current_s(1) OR NOT(input(0)) OR 
input(2)) AND statmachine_current_s(2) AND NOT(rst) AND 
input(1)) OR ((((statmachine_current_s(1) XOR NOT(aux7)) 
AND input(0)) OR ((NOT(statmachine_current_s(1)) OR 
statmachine_current_s(3)) AND statmachine_current_s(2) AND NOT(input(0)))
 OR aux11) AND ((aux6 AND statmachine_current_s(2)
) OR NOT(input(2))) AND aux14));
  END BLOCK label2;
  label3 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED (((NOT(statmachine_current_s(1) XOR (NOT(
statmachine_current_s(3)) AND statmachine_current_s(2))) OR input(0) OR 
aux11) AND (aux16 OR ((aux0 OR NOT(input(0))) AND 
aux17)) AND input(1)) OR (((aux6 AND aux16) OR ((((NOT
(statmachine_current_s(1)) OR 
statmachine_current_s(2)) AND (statmachine_current_s(1) XOR 
statmachine_current_s(3))) OR (aux5 AND input(0)) OR (aux7 AND NOT(
input(0)))) AND aux17) OR (NOT(input(0)) AND NOT(rst) AND
 NOT(input(2)) AND statmachine_current_s(0)) OR (
NOT(statmachine_current_s(1)) AND NOT(
statmachine_current_s(2)) AND input(0) AND aux12)) AND NOT(input(1))));
  END BLOCK label3;

change (0) <= ((aux0 AND aux10) OR (aux0 AND NOT(
statmachine_current_s(2)) AND input(0) AND NOT(rst) AND NOT(input(2)) AND
 NOT(input(1))));

change (1) <= (statmachine_current_s(1) AND NOT(aux1) AND aux10
);

output (0) <= (aux3 AND input(0) AND aux9);

output (1) <= (aux3 AND NOT(input(0)) AND NOT(rst) AND input(2)
 AND NOT(input(1)));
END;

-- VHDL data flow description generated from `vendingmachiner_o`
--		date : Wed Apr 25 14:07:28 2018


-- Entity Declaration

ENTITY vendingmachiner_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachiner_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachiner_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux20 : BIT;		-- aux20
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux24 : BIT;		-- aux24
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux28 : BIT;		-- aux28
  SIGNAL aux29 : BIT;		-- aux29
  SIGNAL aux30 : BIT;		-- aux30
  SIGNAL aux31 : BIT;		-- aux31

BEGIN
  aux31 <= NOT(NOT(input(1)) OR NOT(statmachine_current_s(3)
));
  aux30 <= (NOT(input(1)) AND NOT(statmachine_current_s(3)));
  aux29 <= (NOT(statmachine_current_s(3)) AND 
statmachine_current_s(2));
  aux28 <= ((statmachine_current_s(3) XOR 
statmachine_current_s(2)) AND NOT(statmachine_current_s(1)));
  aux27 <= (aux7 AND aux26);
  aux26 <= (NOT(statmachine_current_s(2)) AND 
statmachine_current_s(1));
  aux25 <= NOT(statmachine_current_s(2) OR 
statmachine_current_s(1));
  aux24 <= NOT(NOT(input(2)) AND input(1));
  aux23 <= NOT(input(2) OR rst);
  aux22 <= (NOT(input(0)) AND NOT(input(1)) AND NOT(
statmachine_current_s(0)));
  aux21 <= NOT(aux2 AND input(1));
  aux20 <= NOT(aux2 AND NOT(input(1)));
  aux19 <= (aux18 AND NOT(input(2)));
  aux18 <= (NOT(input(0)) OR NOT(input(1)));
  aux17 <= (NOT(input(1)) AND statmachine_current_s(0));
  aux16 <= (aux15 OR input(2));
  aux15 <= (NOT(input(0)) AND NOT(input(1)));
  aux14 <= (rst OR aux13);
  aux13 <= ((aux0 AND input(1)) OR aux11);
  aux11 <= (aux8 AND NOT(input(1)));
  aux10 <= ((aux8 AND NOT(rst)) AND NOT(input(1)));
  aux8 <= (NOT(input(0)) AND input(2));
  aux7 <= (NOT(statmachine_current_s(0)) OR NOT(
statmachine_current_s(3)));
  aux6 <= (aux1 AND input(1));
  aux4 <= (aux3 AND input(1));
  aux3 <= (aux2 AND NOT(rst));
  aux2 <= (NOT(input(0)) AND NOT(input(2)));
  aux1 <= (aux0 AND NOT(rst));
  aux0 <= (input(0) AND NOT(input(2)));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED (((aux17 OR NOT(statmachine_current_s(2))) AND 
NOT(statmachine_current_s(1))) OR ((rst OR (NOT(aux2
) AND statmachine_current_s(0)) OR (aux19 AND NOT(
statmachine_current_s(0))) OR (aux17 AND statmachine_current_s(3)) OR ((
input(2) OR input(1)) AND NOT(statmachine_current_s(3))))
 AND statmachine_current_s(2)) OR (((aux16 AND 
statmachine_current_s(0)) OR aux14) AND NOT(statmachine_current_s(2))));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED (((aux29 OR (aux20 AND NOT(
statmachine_current_s(2)))) AND statmachine_current_s(1)) OR (((NOT(aux15
) AND statmachine_current_s(0) AND 
statmachine_current_s(3)) OR (aux16 AND NOT(statmachine_current_s(0))) OR
 aux14) AND statmachine_current_s(2)) OR ((rst OR 
((aux13 OR NOT(statmachine_current_s(0))) AND 
statmachine_current_s(3)) OR (NOT(aux20) AND NOT(statmachine_current_s(3)
))) AND NOT(statmachine_current_s(2))));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((((NOT(aux24) OR aux11) AND aux7) OR rst OR 
statmachine_current_s(2)) AND (aux30 OR aux22 OR NOT(aux18) OR NOT(aux23)
) AND statmachine_current_s(1)) OR ((((aux22 OR 
input(2) OR NOT(statmachine_current_s(3))) AND 
statmachine_current_s(2)) OR rst OR (aux13 AND statmachine_current_s(3)) 
OR (NOT(aux21) AND NOT(statmachine_current_s(3)))) 
AND NOT(statmachine_current_s(1))));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED ((((aux20 AND NOT(rst) AND 
statmachine_current_s(0) AND statmachine_current_s(3)) OR ((NOT(aux0) OR 
input(1)) AND NOT(rst) AND NOT(statmachine_current_s(0)))
) AND statmachine_current_s(2)) OR ((aux24 OR NOT(
statmachine_current_s(0))) AND NOT(aux14) AND statmachine_current_s(3) 
AND NOT(statmachine_current_s(2))) OR ((((aux19 OR 
NOT(statmachine_current_s(0))) AND NOT(rst) AND 
aux29) OR ((input(0) OR NOT(aux31)) AND aux21 AND NOT(
rst) AND statmachine_current_s(0) AND NOT(
statmachine_current_s(2)))) AND statmachine_current_s(1)) OR (((NOT(
input(0)) AND NOT(rst) AND aux31) OR (aux23 AND aux30)) 
AND aux25));
  END BLOCK label3;

change (0) <= (NOT(aux25) AND ((aux3 AND 
statmachine_current_s(3)) OR NOT(statmachine_current_s(2))) AND (aux4 OR 
(aux1 AND NOT(input(1)))) AND 
statmachine_current_s(0));

change (1) <= ((aux4 AND statmachine_current_s(0) AND aux26) OR
 (aux4 AND NOT(statmachine_current_s(3)) AND aux25
));

output (0) <= ((aux6 AND aux27) OR (aux6 AND aux28));

output (1) <= ((aux10 AND aux27) OR (aux10 AND aux28));
END;

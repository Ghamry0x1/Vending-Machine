-- VHDL data flow description generated from `vendingmachiner_o`
--		date : Thu May 10 09:16:02 2018


-- Entity Declaration

ENTITY vendingmachiner_o IS
  PORT (
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  clk : in BIT;	-- clk
  input : in bit_vector(2 DOWNTO 0) ;	-- input
  rst : in BIT;	-- rst
  output : out bit_vector(1 DOWNTO 0) ;	-- output
  change : out bit_vector(1 DOWNTO 0) 	-- change
  );
END vendingmachiner_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vendingmachiner_o IS
  SIGNAL statmachine_current_s : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- statmachine_current_s
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux20 : BIT;		-- aux20
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux28 : BIT;		-- aux28
  SIGNAL aux29 : BIT;		-- aux29
  SIGNAL aux30 : BIT;		-- aux30
  SIGNAL aux31 : BIT;		-- aux31
  SIGNAL aux32 : BIT;		-- aux32
  SIGNAL aux33 : BIT;		-- aux33
  SIGNAL aux34 : BIT;		-- aux34
  SIGNAL aux36 : BIT;		-- aux36
  SIGNAL aux37 : BIT;		-- aux37

BEGIN
  aux37 <= (aux27 OR aux26);
  aux36 <= ((((statmachine_current_s(1) OR 
statmachine_current_s(2)) OR statmachine_current_s(0)) AND ((NOT(
statmachine_current_s(3)) AND statmachine_current_s(1)) OR NOT(
statmachine_current_s(2)))) AND (NOT(statmachine_current_s(3)) OR 
statmachine_current_s(1)));
  aux34 <= (NOT(statmachine_current_s(1)) AND aux33);
  aux33 <= (NOT(statmachine_current_s(2)) AND 
statmachine_current_s(0));
  aux32 <= (NOT(statmachine_current_s(1)) AND 
statmachine_current_s(2));
  aux31 <= (input(0) AND NOT(aux18));
  aux30 <= NOT(NOT(rst) AND aux29);
  aux29 <= (NOT(statmachine_current_s(2)) AND NOT(
statmachine_current_s(0)));
  aux28 <= (NOT(input(0)) AND NOT(input(1)));
  aux27 <= (input(0) AND input(1));
  aux26 <= (NOT(statmachine_current_s(3)) OR input(2));
  aux25 <= ((aux1 AND input(1)) OR ((aux7 AND input(2)) AND 
NOT(input(1))));
  aux21 <= (statmachine_current_s(3) AND aux18);
  aux20 <= (aux19 AND statmachine_current_s(1));
  aux19 <= (aux10 OR aux17);
  aux18 <= (input(2) OR input(1));
  aux17 <= ((NOT(input(0)) AND input(2)) AND NOT(input(1)));
  aux10 <= (aux9 AND input(1));
  aux9 <= (input(0) AND NOT(input(2)));
  aux8 <= (aux7 AND NOT(input(2)));
  aux7 <= (NOT(statmachine_current_s(3)) AND NOT(input(0)));
  aux6 <= (aux5 AND input(1));
  aux5 <= (aux4 AND NOT(input(2)));
  aux4 <= (statmachine_current_s(3) AND NOT(input(0)));
  aux3 <= (NOT(aux2) AND input(1));
  aux2 <= NOT(NOT(input(0)) AND NOT(input(2)));
  aux1 <= ((NOT(statmachine_current_s(3)) AND input(0)) AND
 NOT(input(2)));
  label0 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (0) <= GUARDED ((aux21 OR aux31 OR statmachine_current_s(1) OR 
aux30) AND (aux20 OR ((((statmachine_current_s(3) XOR 
aux2) AND input(1)) OR (NOT(statmachine_current_s(3))
 AND NOT(aux9) AND NOT(input(1)))) AND NOT(
statmachine_current_s(1))) OR rst OR (statmachine_current_s(3) AND (
input(2) OR NOT(input(1))) AND statmachine_current_s(1) 
AND statmachine_current_s(2)) OR (((aux18 AND NOT(
statmachine_current_s(1))) OR NOT(statmachine_current_s(3))) AND NOT(
statmachine_current_s(2)))));
  END BLOCK label0;
  label1 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (1) <= GUARDED ((aux37 AND statmachine_current_s(1)) OR rst OR (
(aux3 OR (statmachine_current_s(3) AND aux31)) AND
 aux32) OR (statmachine_current_s(1) AND NOT(
statmachine_current_s(2))) OR (aux25 AND aux33) OR (aux8 AND aux29));
  END BLOCK label1;
  label2 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (2) <= GUARDED (((((aux2 OR statmachine_current_s(1)) AND (aux37
 OR aux28)) OR rst) AND statmachine_current_s(2)) 
OR ((aux20 OR (aux5 AND NOT(input(1)) AND NOT(
statmachine_current_s(1))) OR rst) AND NOT(statmachine_current_s(2))) OR 
(aux25 AND aux34) OR ((NOT(input(0)) OR 
statmachine_current_s(1)) AND NOT(statmachine_current_s(3)) AND NOT(
input(2)) AND input(1) AND aux29));
  END BLOCK label2;
  label3 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    statmachine_current_s (3) <= GUARDED (((aux21 OR (input(1) AND input(2)) OR 
statmachine_current_s(1)) AND ((statmachine_current_s(3) AND aux2) OR 
aux19)) OR rst OR (NOT(aux27) AND NOT(aux4) AND NOT(
input(2)) AND aux32) OR ((aux28 OR 
statmachine_current_s(1)) AND NOT(aux26) AND NOT(statmachine_current_s(2)
)) OR (aux19 AND aux34) OR ((NOT(input(2)) OR 
statmachine_current_s(1)) AND aux28 AND aux29));
  END BLOCK label3;

change (0) <= ((aux6 OR NOT(statmachine_current_s(0))) AND (NOT
(statmachine_current_s(3)) OR NOT(input(1)) OR NOT
(statmachine_current_s(1))) AND (aux3 OR (aux1 AND
 NOT(input(1)))) AND NOT(rst) AND NOT(
statmachine_current_s(2)));

change (1) <= ((aux8 AND input(1) AND NOT(aux30)) OR (aux6 AND 
NOT(statmachine_current_s(1)) AND NOT(rst) AND 
statmachine_current_s(2)));

output (0) <= (aux36 AND aux10 AND NOT(rst));

output (1) <= (aux36 AND aux17 AND NOT(rst));
END;
